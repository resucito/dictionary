@page "/songs/{title}"
@inject HttpClient Http
@inject Dictionary.Shared.Interfaces.ISongMatcher SongMatcher

@if (!songs.Any())
{
    <p>Searching for @Title...</p>
    @*<div class="bg-error white p rounded small">
            <span class="large">Oh no!</span>
            <br>
            <p>No song found matching title @Title.</p>
        </div>*@
}
else
{
    @*<h3>@MatchedSong.SpanishTitle</h3>*@
    <table class="table">
        <thead>
            <tr>
                <th>Spanish</th>
                <th>English</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var song in songs)
            {
                <tr>
                    <td>@song.SpanishTitle</td>
                    <td>@song.EnglishTitle</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Shared.Models.Song> songs = new List<Shared.Models.Song>();

    [Parameter]
    public string Title { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var index = await Http.GetFromJsonAsync<Shared.Models.Song[]>("data/index.json");
        foreach (var song in index)
        {
            if (await SongMatcher.MatchAsync(song, Title))
            {
                Console.WriteLine($"added {song.SpanishTitle}");
                this.songs.Add(song);
            }
        }
    }
}
